	chapter009 nested-class-interface
	
	-- Table of contents --
		9.1 about nested class and nested interface
		9.2 nested class
		9.3 access modify of nested class
		9.4 nested interface
		9.5 anonymous object
	-----------------------
	
	9.1 about nested class and nested interface
		- 객체 지향 프로그램에서 클래스들은 서로 긴밀한 관계를 맺고 상호작용을 한다.
		- 어떤 클래스는 여러 클래스와 관계를 맺지만 어떤 클래스는 특정 클래스와 관계를 맺는다.
		- 클래스가 여러 클래스와 관계를 맺는 경우에는 독립적으로 선언하는 것이 좋으나
		- 특정 클래스와 관계를 맺을 경우에는 관계클래스를 클래스 내부에 선언하는 것이 좋다.
		- 중첩 클래스란 클래스 내부에 선언한 클래스를 의미한다.
		- 중첩 클래스를 사용하면 두 클래스의 멤버들을 서로 쉽게 접근할 수 있다는 장점과
		  외부에는 불필요한 관계 클래스를 감춤으로써 코드의 복잡성을 줄일 수 있다.
		----------------------------------------------------------
			class ClassName {
				class NestedClassName{
				}
			}
		----------------------------------------------------------
		- 인터페이스도 클래스 내부에 선언할 수 있다. 이런 인터페이스를 중첩 인터페이스라고 한다.
		- 인터페이스를 클래스 내부에 선언하는 이유는 해당 클래스와 긴밀한 관계를 맺는 구현 클래스를 만들기 위해서이다.
		----------------------------------------------------------
			class ClassName {
				interface NestedInterfaceName{
				}
			}
		----------------------------------------------------------
		- 중첩 인터페이스는 주로 UI프로그래밍에서 이벤트를 처리할 목적으로 많이 활용된다.
		